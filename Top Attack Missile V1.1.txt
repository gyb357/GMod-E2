@name Top Attack Missile V1.1
@inputs  [Launcher Target]:entity [Ready Active]
@outputs [Pos]:vector [Missile]:entity Vector:vector Dx Dy
@persist [Own]:entity [Null]:vector
@persist [Ary]:array [Ent Missile Prop]:entity [TargetPos Vector]:vector
interval(32)

if (first() | dupefinished()) {
    # ----- Do Not Touch These ----- #
        Own    = owner()
        Null = vec(0, 0, 0)
        Range = 400
        
    function entity findMissile() {
        findExcludePlayer(Own)
        findIncludePlayerProps(Own)
        findByClass("acf_missile")
        findSortByDistance(Launcher:pos())
        Ary = findToArray()
        Ent = Ary[1, entity]
        
        return Ent
    }
}

if (Active) {
    if (changed(Ready) & Ready) {
        Missile = findMissile()
    }
    
    Dist = toUnit("m", Missile:pos():distance(Target:pos()))
    Dx   = toUnit("m", Launcher:pos():distance(Missile:pos()))
    
    if(changed(Missile)) {
        Missile:createWire(entity(), "Detonate", "Destruct")
    }
    if (Dx > 1 & Target) {
        if (Dist < 53.85) {
            Vector = vec(0, 0, -500)
            Missile:propDraw(0)
            timer("Null", 250)
            
            if (changed(clk("Null"))) {
                Vector = Null
                stoptimer("Null")
            }
        } else {
            BoxSize = Target:boxSize():length()
            Vector = vec(0, 0, 1500)
        }
    } else {
        Vector = Null
    }
    
    TargetPos = Target ? (Target:isPlayer() ? Target:massCenter() : Target:pos()) : Null
    Pos       = TargetPos + Vector
    
    Destruct = Dist < 2 ? 1 : 0
}

    CpuUsage = cpuUsage() * 1000000
    Ops = ops()
    
