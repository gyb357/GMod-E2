@name Ammo SetUp
@inputs  [Pod]:wirelink [Gun]:entity
@outputs [AmmoText]:string [CpuOps]:array
@persist [ChangeAmmo]:string 
@persist [Links]:array [Own]:entity
@persist [Index AmmoType]:array [AmmoIndex]:number 
interval(64)

if (first() | dupefinished()) {
    # ----- User Interface ----- #
    ChangeAmmo = "r"
    
    # ----- Do Not Touch These ----- #
        Links = Gun:acfLinks()
        
        Own = owner()
        
    function void searchAmmo() {
        Ammo = Gun:acfLinks()
        
        for (I = 1, Links:count()) {
            Type = Ammo[I, entity]:acfAmmoType()
            
            if (changed(Type) & Type) {
                Index:pushEntity(Ammo[I, entity])
            }
        }
        
        for (I = 1, Index:count()) {
            AmmoType:pushString(Index[I, entity]:acfAmmoType())
        }
    }
    
    function void ammoSelect() {
        Change = Own:keyPressed(ChangeAmmo)
        
        if (changed(Change) & Change) {
            AmmoIndex += AmmoIndex < AmmoType:count() ? 1 : -AmmoType:count() + 1
        }
        
        AmmoText = AmmoType[AmmoIndex, string] + " (" + Gun:acfAmmoType() + ") " + Gun:acfAmmoCount()
    }
    
    function void ammoActive() {
        if ((changed(Change) & Change) | changed(Gun:acfAmmoCount()) & Gun:acfAmmoCount()) {
            for (I = 1, Links:count()) {
                Links[I, entity]:acfActive(AmmoType[AmmoIndex, string] == Links[I, entity]:acfAmmoType() ? 1 : 0)
            }
        }
    }
}

if (first()) {
    searchAmmo()
}
    Active = Pod["Active", number]
    
if (changed(Active)) {
    AmmoIndex = 1
}

if (Active) {
    ammoSelect()
    ammoActive()
}

if (changed(Gun:acfLinks():count())) {
    reset()
}

    CpuOps = array(cpuUsage() * 1000000, ops())
    
# Made By RuBid Ammo SetUp V2019.09.25
