@name ACF Ammo Setup V5
@inputs  [Gun]:entity [Active ChangeAmmo]:number
@outputs [AmmoText]:string
@persist [ResetLink]:number
@persist [AmmoTable]:table [AmmoArray AmmoType]:array
@persist [Link NoLink]:number

if (first() | dupefinished()) {

  ResetLink = 1



  function array entity:ammoType() {
    if (Gun:type() == "acf_gun") {findIncludePlayerProps(Own), findByClass("acf_ammo")}

    AmmoArray = findToArray()
    for (I = 1, AmmoArray:count()) {
      local AmmoEnt = AmmoArray[I, entity]
      AmmoTable[AmmoEnt:acfAmmoType(), number] = AmmoTable[AmmoEnt:acfAmmoType(), number] + 1
      
      if (changed(AmmoTable:count())) {AmmoType:pushEntity(AmmoEnt)}
    }
    return AmmoType
  }
  function void entity:ammoLinkTo(AmmoArray:array) {
      for (I = 1, Ammo:count()) {
        local AmmoEnt = AmmoArray[I, entity]
        if (ResetLink) {Gun:acfUnlinkFrom(AmmoEnt, 0)}

        local Caliber = AmmoEnt:acfCaliber()
        if (Caliber == Gun:acfCaliber()) {
          Gun:acfLinkTo(AmmoEnt, 0)
          Link++
        }
        else {
          NoLink++
        }
    }
  }
  function void selectAmmo(AmmoType:array) {
    local TypeCount = AmmoType:count()
    if (changed(ChangeAmmo) & ChangeAmmo) {
      Index += Index < TypeCount ? 1 : -TypeCount + 1
      
      local AmmoTypeEnt = AmmoType[Index, entity]
      local GunAmmoType = Gun:acfAmmoType()
      local GunAmmoLink = Gun:acfLinks()
      AmmoText = AmmoTypeEnt:acfAmmoType() + " (" + GunAmmoType + ") " + GunAmmoType:count()

      for (I = 1, GunAmmoLink:count()) {
        local GunAmmoLinkEnt =  GunAmmoLink[I, entity]
        GunAmmoLinkEnt:acfActive(AmmoTypeEnt:acfAmmoType() == GunAmmoLinkEnt:acfAmmoType() ? 1 : 0)
      }


  }

if (Active) {

}



