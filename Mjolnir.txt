@name Mjolnir
@inputs  [Spin]:number
@outputs [Target]:entity [WeaponType]:string
@persist [ThrowForce]:number
@persist [Own Base]:entity
@persist [Trw Cn]:number
interval(16)

if (first() | dupefinished()) {
    # ----- User Interface ----- #
    ThrowForce = 5
    
    # ----- Do Not Touch These ----- #
        Own = owner()
        Base = entity():isWeldedTo()
        
    Base:setTrails(10, 10, 1.5, "trails/laser", vec(100, 150, 250), 255)
    Base:propGravity(1)
}

    WeaponType = Own:weapon():type()
    
if (Own:weapon():type() == "weapon_crowbar") {
    if (first()) {
        timer("First", 10)
        
        Trw = 0
        Cn = 1
    }
    if (clk("First")) {
        stoptimer("First")
        Trw = 0
        Cn = 1
    }
    
    Throw = Own:keyAttack1()
    Collection = Own:keyAttack2()
    
    if (changed(Throw) & Cn) {
        Trw = 1
        Cn = 0
    } else {
        Trw = 0
    }
    
    if (changed(Trw == 1)) {
        timer("Throw", 500)
    }
    if (clk("Throw")) {
        Trw = 0
        stoptimer("Throw")
    }
    
    if (changed(Collection) & Collection) {
        Cn = !Cn
    }
    
    Dist = Base:pos():distance(Own:pos()) * 0.01905
    
    Ranger = rangerOffset(50000, Own:pos() + Own:eyeAngles():forward() * 10 + vec(0, 0, 35), Own:eyeAngles():forward())
    
    Target = Ranger:entity()
    Pos = Target ? Target:pos() : Own:eyeAngles():forward()
    
    if (Dist < 10 & changed(Trw == 1)) {
        Base:applyForce(Pos * Base:mass() * ThrowForce * 1000)
    }
    
    if (Cn) {
        Base:setAng(Own:eyeAngles())
        Base:applyForce(((Own:pos() + vec(0, 0, 200) - Base:pos()) - Base:vel()) * Base:mass() * ThrowForce)
    }
    
    if (changed(Spin)) {
        Base:applyAngForce(ang(0, 90, 0) * Base:mass() * ThrowForce * 100)
    }
}
