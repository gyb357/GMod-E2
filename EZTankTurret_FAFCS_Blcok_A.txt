@name EZTankTurret FAFCS Blcok A
@inputs  [Pod Cam]:wirelink [Base Gun Chair]:entity 
@inputs  [Active MuzzleVelocity XZoom Shift Ready Ammo2Active]
@outputs [Target Driver]:entity [Entity]:array [String]:string
@outputs [Distance TravelTime Gravity] [HESDVector]:vector
@outputs [Lock FindClass HESD Ops]
@persist [Driver]:entity                                                                  #Driver
@persist [FallConstant MovingFireConstant MovingTargetConstant ToMpS] [NULLVector]:vector #Calculation Of Trajectory Variables
@persist [Elevation Depression Yaw RotateSpeed ApplyAngForce FOV LocalVelocity]           #Gun Setting
@persist [CamDist Zoom] [CamOffset]:vector                                                #Cam Setting
@persist [PTPosition PTVelocity]:vector                                                   #Calculation Of Trajectory
@persist [Active Lock FindClass Mouse1 Mouse2 Range] [String]:string [Inertia]:angle      #Starting Setting
@persist [Sound]:string                                                                   #Turret RotateSound
@persist [Target ParentedTarget]:entity [Ranger]:ranger                                   #TargetPosition Variables
@persist [HESD] [HESDProp]:entity                                                         #HESD Mod

interval( 32 )

if( first() | dupefinished() ){
###########------------------VARIARBLES-----------------############
    
    #Calculation Of Trajectory Variables
	   FallConstant         = 10.5
	   MovingFireConstant   = 2.3
    MovingTargetConstant = -1
    ToMpS                = 0.01905
    NULLVector           = vec( 0, 0, 0 )
    
    #Gun Setting
    Elevation            = 20
    Depression           = 10
    Yaw                  = 180
    RotateSpeed          = 10
    ApplyAngForce        = 250
    
    #Cam Setting
	   CamOffset            = vec( 0, 0, 150 )
	   CamDist              = 400
	   Zoom                 = 86
    
    #Starting Setting
    Lock                 = 0
    FindClass            = 0
    Mouse1               = 0
    Mouse2               = 0
    HESD                 = 0
    String               = "FindType: NULL"
    Range                = 999999999
    Inertia              = shiftL( ang( Gun:inertia() ) )
    
    #Turret RotateSound
    Sound                = "acf_extra/tankfx/tankinside2.wav"
    
    #Hologram
    holoCreate( 1 )
    holoAlpha( 1, 0 )
    
    printColor( vec( 250, 100, 100 ), "EZTankTurret FAFCS Block A V2018.11.09" )
    soundPlay( 3, 3, "hl1/fvox/targetting_system.wav" )
}

	   #Sutff Variables
    FOV                  = 90 - XZoom * Zoom
    Driver               = Pod[ "Entity", entity ]:driver()
    Mouse1               = Driver:keyAttack1()
	   Mouse2               = Driver:keyAttack2()
    Key_T                = Driver:keyPressed( "T" )
    Key_M                = Driver:keyPressed( "M" )
    
###########---------------------END---------------------############

if( Active ){
    
    if( changed( Active ) ){
        #Cam
        FOV                       = 90
        Cam[ "Distance", number ] = CamDist
        Cam[ "Parent", entity ]   = Base
        
        #Turret RotateSound
        Gun:soundPlay( 1, 0, Sound )
            soundPitch( 1, 0 )
        
        HESD                      = 0
    }
    
    Position                      = Base:pos() + CamOffset
    Cam[ "FOV", number ]          = FOV
    Cam[ "Position", vector ]     = Position
    
    
    #Find Target
    if( ( changed( Mouse2 ) & Mouse2 ) & FindClass >= 1 ){
        Lock++
        
        #findExcludePlayerProps( owner() )
	       findInCone( Gun:pos(), Gun:forward(), Range, 6 )
        findSortByDistance( Ranger:pos() )
    }
    
    #TargetPosition Variables
    Target                = findToArray():entity( 1 )
    TargetPosition        = Target:pos() + HESDVector
    
    #LockMod Element
    if( Lock ){ Vector = TargetPosition } else{ Vector = Ranger:pos() }
    if( ( changed( Lock ) & Lock ) ){ Gun:soundPlay( 2, 1, "acf_extra/airfx/laser_lock.wav" ) soundPitch( 2, 65 ) }
    if( Lock & changed( String ) & FindClass | Lock > 1 | Lock & TargetPosition == vec( 0, 0, 0 ) | changed( Active ) ){ Lock = 0 soundPitch( 2, 0 ) }
    
    #Select TargetClass
    if( FindClass > 4 ){ FindClass = 0 }
    if( changed( Key_T ) & Key_T ){ FindClass += 1 }
    if( changed( FindClass ) & FindClass ){
        findClearWhiteList()
        
        if( FindClass << 1 ){                                                                String = "FindType: NULL" }
        if( FindClass == 1 ){ findIncludeClass( "Player" )                                   String = "FindType: Player"       hint( "FindType: Player", 1 ) }
        if( FindClass == 2 ){ findIncludeClass( "Prop_physics" )                             String = "FindType: Prop"         hint( "FindType: Prop", 1 ) }
        if( FindClass == 3 ){ findIncludeClass( "ACF_Gun" ) findIncludeClass( "ACF_Engine" ) String = "FindType: Gun / Engine" hint( "FindType: Gun / Engine", 1 ) }
        if( FindClass == 4 ){ findIncludeClass( "Gmod_Wire_Gate" )                           String = "FindType: CenterProp"   hint( "FindType: CenterProp", 1 ) }
    }
    
    #FAFCS Option
    if( ( FindClass == 2 | FindClass == 4 ) & Target:parent():type() == "Prop_physics" ){
        Activity       = 1
        PTPosition     = TargetPosition
        PTVelocity     = $PTPosition
        ParentedEntity = PTVelocity * 1.25
    } else{ Activity   = 0 }
    if( ( FindClass == 1 | FindClass == 4 ) & Lock ){
        CenterPos      = vec( 0, 0, 10 )
    } else{ CenterPos  = NULLVector }
    if( Shift & Lock ){
        CustomAim      = ( Ranger:pos() - Gun:pos() ) + ParentedEntity * Activity
    } else{ CustomAim  = NULLVector }
    
    #Calculation Of Trajectory
    Distance           = Gun:pos():distance( Vector ) * ToMpS
    TravelTime         = Distance / MuzzleVelocity
    Gravity            = FallConstant * ( TravelTime ) ^ 2 / ToMpS
    RV                 = ( !Lock * ( -Ranger:entity():vel() ) * MovingTargetConstant + Lock * -Target:vel() * MovingTargetConstant - Gun:vel() * 0.9 ) * TravelTime + ( ParentedEntity * 1.25 ) * Activity + CenterPos
    
    #HESD
    if( ( changed( Key_M ) & Key_M ) & Ammo2Active ){ HESD = !HESD }
    if( HESD & !Ammo2Active | HESD & !Lock ){ HESD = 0 }
    if( HESD ){
        holoPos( 1, Target:pos() + RV * MovingFireConstant + vec( 0, 0, 100 ) )
        
        HESDVector = vec( 0, 0, 100 )
        
        HESDProp:propDrag( 0 )
        HESDProp:setMass( 0.0001 )
        HESDProp:setColor( vec4( 0, 0, 0, 0 ) )
    } else{ holoPos( 1, entity():pos() ) HESDVector = vec( 0, 0, 0 ) }
    if( changed( HESD ) & HESD ){ soundPlay( 4, 1, "acf_extra/airfx/satellite_target.wav" ) }
    if( !Ready & Lock & HESD & Mouse1 & !Shift ){
        timer( "PropSpawn", TravelTime * 10 )
        
        if( changed( clk( "PropSpawn" ) ) & clk( "PropSpawn" ) ){
            HESDProp   = propSpawn( "models/hunter/plates/plate2x2.mdl", holoEntity( 1 ):pos(), Gun:angles() + ang( 0, 90, 90 ), 1 )
        }
    }
    
    #GunAng Stuff
    Angle              = Chair:toLocal( Driver:eyeAngles() )
    Ranger             = rangerOffset( Range, Position, Angle:forward() )
    GunAng             = ( ( Vector + CustomAim + vec( 0, 0, Gravity ) + RV * MovingFireConstant ) - Gun:pos() ):toAngle()
    
    #AngForce Stuff
    Force              = Gun:toWorld( clamp( Gun:toLocal( GunAng ), ang( -RotateSpeed ),ang( RotateSpeed ) ) )
    Clamped            = clamp(entity():toLocal( Force ),ang( -Elevation, -Yaw, -1 ), ang( Depression, Yaw, 1 ) )
    LocalToGun         = Gun:toLocal( entity():toWorld( Clamped ) )
    Gun:applyAngForce( ( LocalToGun * ApplyAngForce - Gun:angVel() * ApplyAngForce * 0.14 ) * Inertia )
    
    #Turret RotateSound
    LocalVelocity  = entity():toLocal( Gun:angles() ):yaw()
    soundPitch( 1, ( abs( $LocalVelocity ) > 0.3 ) * 40 )
    
    #RangerFilter
    rangerFilter( Gun )
    rangerFilter( entity():getConstraints() )
    rangerPersist( 1 )
} else{ stoptimer( "interval" ) soundPitch( 1, 0 ) }

Ops = ops()

#Made By RuBid EZTankTurret FAFCS Block A V2018.11.09
